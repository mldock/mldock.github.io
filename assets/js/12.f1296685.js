(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{369:function(t,a,e){"use strict";e.r(a);var s=e(44),o=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"templates"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#templates"}},[t._v("#")]),t._v(" Templates")]),t._v(" "),e("h4",{attrs:{id:"description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),e("p",[e("code",[t._v("A collection of commands to create and manage mldock container templates.")])]),t._v(" "),e("p",[t._v("This collection of commands helps to configure your CLI for development. It includes setting up Authentication in-line with cloud vendor command line tools and also provides an approach to set static environment variables such as those required by these cloud vendor CLI tools.")]),t._v(" "),e("h2",{attrs:{id:"create"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#create"}},[t._v("#")]),t._v(" Create")]),t._v(" "),e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[t._v("usage: mldock templates create "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--dir "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--name "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--out "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),e("h4",{attrs:{id:"description-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#description-2"}},[t._v("#")]),t._v(" Description")]),t._v(" "),e("p",[e("code",[t._v("Pull docker container image from Image Registry.")])]),t._v(" "),e("h4",{attrs:{id:"options"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),e("p",[e("code",[t._v("--dir")]),t._v(" path to MLDOCK directory.")]),t._v(" "),e("p",[e("code",[t._v("--name")]),t._v(" name of the container to write.")]),t._v(" "),e("p",[e("code",[t._v("--out")]),t._v(" Path to location where template should be written. (Only supports local paths).")])])}),[],!1,null,null,null);a.default=o.exports}}]);
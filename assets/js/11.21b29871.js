(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{368:function(t,a,s){"use strict";s.r(a);var e=s(44),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"registry"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#registry"}},[t._v("#")]),t._v(" Registry")]),t._v(" "),s("h4",{attrs:{id:"description"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[s("code",[t._v("A collection of commands to interact with Image Registry.")])]),t._v(" "),s("p",[t._v("This collection of commands helps in tasks such as pushing and pulling docker images from image registries, including cloud registries like ECR and GCR and Dockerhub.")]),t._v(" "),s("h2",{attrs:{id:"push"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[t._v("#")]),t._v(" Push")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("usage: mldock registry push "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--provider "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--region "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                         "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--build"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--stage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h4",{attrs:{id:"description-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-2"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[s("code",[t._v("Push docker container image to Image Registry.")])]),t._v(" "),s("h4",{attrs:{id:"options"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options"}},[t._v("#")]),t._v(" Options")]),t._v(" "),s("p",[s("code",[t._v("--dir")]),t._v(" path to MLDOCK directory")]),t._v(" "),s("p",[s("code",[t._v("--provider")]),t._v(" Cloud container provider to push container image to.")]),t._v(" "),s("p",[s("code",[t._v("--region")]),t._v(" "),s("em",[t._v("(Default=None)")]),t._v(" Region, specific to provider, where cloud container registry is available.")]),t._v(" "),s("p",[s("code",[t._v("--build")]),t._v(" (Optional) Flag which tells MLDOCK to build before pushing container image.")]),t._v(" "),s("p",[s("code",[t._v("--tag")]),t._v(" "),s("em",[t._v("(Default=latest)")]),t._v(" Selects which container image varient to run container as.")]),t._v(" "),s("p",[s("code",[t._v("--stage")]),t._v(" "),s("em",[t._v("(Optional)")]),t._v(" Selects which stage to run docker container in.")]),t._v(" "),s("h2",{attrs:{id:"pull"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#pull"}},[t._v("#")]),t._v(" Pull")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("usage: mldock registry pull "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--dir "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--provider "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--region "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n                        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--tag "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("--stage "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("text"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("h4",{attrs:{id:"description-3"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#description-3"}},[t._v("#")]),t._v(" Description")]),t._v(" "),s("p",[s("code",[t._v("Pull docker container image from Image Registry.")])]),t._v(" "),s("h4",{attrs:{id:"options-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#options-2"}},[t._v("#")]),t._v(" Options")]),t._v(" "),s("p",[s("code",[t._v("--dir")]),t._v(" path to MLDOCK directory.")]),t._v(" "),s("p",[s("code",[t._v("--provider")]),t._v(" Cloud container provider to pull container image from.")]),t._v(" "),s("p",[s("code",[t._v("--region")]),t._v(" "),s("em",[t._v("(Default=None)")]),t._v(" Region, specific to provider, where cloud container registry is available.")]),t._v(" "),s("p",[s("code",[t._v("--tag")]),t._v(" "),s("em",[t._v("(Default=latest)")]),t._v(" Selects which container image varient to run container as.")]),t._v(" "),s("p",[s("code",[t._v("--stage")]),t._v(" "),s("em",[t._v("(Optional)")]),t._v(" Selects which stage to run docker container in.")])])}),[],!1,null,null,null);a.default=r.exports}}]);